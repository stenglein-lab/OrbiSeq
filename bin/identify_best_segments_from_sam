#!/usr/bin/perl

#
# This script identifies the best aligned-to BTV reference sequences
# 
# Mark Stenglein July 27, 2012
# Updated May 20, 2025 by Tillie Dunham
#

use strict;
use Getopt::Long;

my $usage = <<USAGE;

 This script identifies the best aligned-to BTV reference sequences

 Inputs: fasta file of BTV ref seqs, and
         sam file of reads aligned to those ref seqs

 usage: $0  [-h] [-u] <fasta_file_used_to_create_bt_index> <sam_file>

   -h                print this message

USAGE

my $print_usage = 0;
my $output_unmapped = 0;

if (scalar @ARGV != 2) { print $usage; exit; }

GetOptions ("h" => \$print_usage);

if ($print_usage) { print $usage; exit; }

my $fasta_file = shift or print $usage and die($!);
open (my $fasta_fh, "<", $fasta_file) or print $usage and die("error: couldn't open fasta file $fasta_file\n$!\n");

my $sam_file = shift or print $usage and die($!);
open (my $sam_fh, "<", $sam_file) or print $usage and die("error: couldn't open sam file $sam_file\n$!\n");

# parse FASTA to get reference IDs for each segment
my %segment_to_refs;  # segment number -> array of seq IDs
my $cur_header;
while (my $line = <$fasta_fh>) {
    chomp $line;
    if ($line =~ /^>(.+)/) {
        $cur_header = $1;
        if ($cur_header =~ /s(\d+)_/) {
            push @{$segment_to_refs{$1}}, $cur_header;
        }
    }
}
seek($fasta_fh, 0, 0);  # rewind FASTA file for later

my @segment_numbers = sort { $a <=> $b } keys %segment_to_refs;
my %best_aligned_to_segment_ids;

# decide if there is only one reference per segment
my $single_reference_per_segment = 1;
for my $segment (@segment_numbers) {
    if (@{$segment_to_refs{$segment}} != 1) {
        $single_reference_per_segment = 0;
        last;
    }
}

if ($single_reference_per_segment) {
    # if only one ref per segment, use it directly
    for my $segment (@segment_numbers) {
        my $seq_id = $segment_to_refs{$segment}[0];
        $best_aligned_to_segment_ids{$seq_id} = 1;
        warn "$segment: $seq_id (only reference, chosen by default)\n";
    }
} else {
    # tally alignments as in original script
    my %subject_id_tally;
    while (<$sam_fh>) {
        chomp;
        next if /^@/;
        my @fields = split "\t";
        if (!$output_unmapped) {
            my $flag = $fields[1];
            next if ($flag & 4);
        }
        my $subject_id = $fields[2];
        $subject_id_tally{$subject_id} += 1;
    }

    # choose the reference with most alignments for each segment
    for my $segment (@segment_numbers) {
        foreach my $subject_id (sort { $subject_id_tally{$b} <=> $subject_id_tally{$a} } keys %subject_id_tally) {
            if ($subject_id =~ /s(\d+)_/) {
                my $this_segment_number = $1;
                if ($this_segment_number == $segment) {
                    warn "$segment: $subject_id (most aligned-to)\n";
                    $best_aligned_to_segment_ids{$subject_id} = 1;
                    last;
                }
            } else {
                die ("error: couldn't parse segment # for subject ID: $subject_id\n");
            }
        }
    }
}

# output the selected references
my $printing_lines = 0;
while (<$fasta_fh>) {
    chomp;
    if (/^>(.+)/) {
        $printing_lines = 0;
        my $seq_id = $1;
        if ($best_aligned_to_segment_ids{$seq_id}) {
            $printing_lines = 1;
        }
    }
    print "$_\n" if $printing_lines;
}